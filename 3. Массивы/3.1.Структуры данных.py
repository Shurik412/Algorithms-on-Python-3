"""
Данные - это абстрация реальных объектов.
К фундаментальным структурам данных относят:
- массивы - структуры с фиксированной длиной;
- множества - динамическая структура.

В Python есть структура хранения данных:
- Списки (массивы);
- Кортежи;
- Множества;
- Словари.

Список (одномерный массив) - массив (в Python в списке могут быть любые данные)
Кортеж (tuple) - это неизменяемая последовательность данных. В основе организации работы с кортежем лежит список.
                С кортежем можно делать все тоже самое что и со списоком кроме добавления или удаления после создания.

Множества:
 - В отличии от массивов, где элементы хранятся в виде последовательного списка, в множествах порядок хранения
    элементов не определен.
 - Более того, элементы множества хранятся не подряд, как в списке, а при помощи хитрых алгоритмов.

Словари (dict) - неупорядоченные коллекции произвольных объектов с доступом по ключу. Их иногда ещё называют
ассоциативными массивами или хэш-таблицами.
    - Данные хранятся в виде пар: ключ - значение
    - В качестве ключа может выступать любой объект неизменяемого (imutable) типа.
"""
#####################################
# 1. Удаление элементов списка во время его итерирования

# list_1 = [1, 2, 3, 4]
# list_2 = [1, 2, 3, 4]
# list_3 = [1, 2, 3, 4]
# list_4 = [1, 2, 3, 4]
#
# for i, item in enumerate(list_1):
#     del item
# print(list_1)
#
# for i, item in enumerate(list_2):
#     list_2.remove(item)
# print(list_2)
#
# for i, item in enumerate(list_3):
#     list_3.pop(i)
# print(list_3)
#
# for i, item in enumerate(list_4[:]):
#     list_4.remove(item)
# print(list_4)
#####################################
# 2. Крестики-нолики, где X побеждает с первой попытки

# row = [''] * 3
# board = [row] * 3
# print(board)
# board[0][0] = 'X'
# print(board)

# board = [[''] * 3 for _ in range(3)]
# print(board)
# board[0][0] = 'X'
# print(board)

#####################################
# 3.Те же операнды, но другая история
# 1 вариант
a = [1, 2, 3, 4]
b = a
a = a + [5, 6, 7]
print(a, b)

# 2 вариант
a = [1, 2, 3, 4]
b = a
a += [5, 6, 7]
print(a, b)

#####################################
# 4. Игла в строке сена (Кортеж (tuple) - это неизменяемая последовательность данных)
t = ('one', 'two')  # кортеж с 2-я элементами
for i in t:
    print(i)  # выводит: one потом two

t = ('one')  # кортеж c 1-м элементом
for i in t:
    print(i)  # выводит: o, потом n, потом e, если поставим запятую после 'one' то получим вывод: 'one'

t = ('one',)  # кортеж c 1-м элементом
for i in t:
    print(i)  # выводит: o, потом n, потом e, если поставим запятую после 'one' то получим вывод: 'one'

#####################################
# 5. Сохраним только уникальные значения (множество)
lst = [1, 5, 6, 1, 6, 2, 4, 5, 1, 6, 5]
lst = list(set(lst))
set_ = set(lst)
print(lst)
print(set_)

#####################################
# 6. Ключ словаря - изменяемый объект (словарь)
set_x = {1, 2, 3}  # множество
lst_x = [1, 4, 9]  # список
# dict_x = {set_x: lst_x} выдает ошибку
# dict_x = {lst_x: set_x} выдает ошибку
dict_x = {frozenset(set_x): lst_x}
dict_y = {tuple(lst_x): set_x}  # Кортеж (tuple) - это неизменяемая последовательность данных
print(dict_x)
print(dict_y)
print(type(set_x))
